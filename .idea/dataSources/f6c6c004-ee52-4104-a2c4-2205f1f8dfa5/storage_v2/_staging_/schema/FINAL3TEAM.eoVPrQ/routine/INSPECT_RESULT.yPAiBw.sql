CREATE OR REPLACE PROCEDURE INSPECT_RESULT
(
    P_PLATFORM_DELIVERY_ID IN NUMBER,
    P_PLATFORM_DELIVERY_RETURN_ID IN NUMBER,
    P_INSPEC_GRADE_ID IN NUMBER,
    P_EQUIP_GRADE_ID IN NUMBER,
    P_ADMIN_ID IN VARCHAR2 DEFAULT 'ADMIN1',
    P_INSPEC_COMMENT IN VARCHAR2 DEFAULT '자동 검수 처리'
)
AS
    V_INSPEC_RESULT_ID NUMBER;
    V_INSPEC_RESULT_ACTION_ID NUMBER;
    V_RESULT_ACTION_TYPE_ID NUMBER;
    V_ADMIN_ID VARCHAR2(20);
    V_INSPEC_LIST_ID NUMBER;
    V_CATE_INSPEC_ID NUMBER;
    V_EXISTING_COUNT NUMBER := 0;
    V_EQUIP_GRADE_NAME CHAR(1);
    V_MIN_DEDUCTION NUMBER;
    V_MAX_DEDUCTION NUMBER;
    V_ALREADY_PROCESSED EXCEPTION;
    V_INVALID_EQUIP_GRADE EXCEPTION;
BEGIN
    -- 이미 검수 처리가 되었는지 확인
    IF P_PLATFORM_DELIVERY_ID IS NOT NULL THEN
        SELECT COUNT(*) INTO V_EXISTING_COUNT FROM INSPEC_RESULT
        WHERE PLATFORM_DELIVERY_ID = P_PLATFORM_DELIVERY_ID;
    ELSE
        SELECT COUNT(*) INTO V_EXISTING_COUNT FROM INSPEC_RESULT
        WHERE PLATFORM_DELIVERY_RETURN_ID = P_PLATFORM_DELIVERY_RETURN_ID;
    END IF;

    -- 이미 처리된 경우 예외 발생
    IF V_EXISTING_COUNT > 0 THEN
        RAISE V_ALREADY_PROCESSED;
    END IF;

    -- EQUIP_GRADE 테이블에서 등급 정보 가져오기
    BEGIN
        SELECT EQUIP_GRADE_NAME, MIN_DEDUCTION, MAX_DEDUCTION
        INTO V_EQUIP_GRADE_NAME, V_MIN_DEDUCTION, V_MAX_DEDUCTION
        FROM EQUIP_GRADE
        WHERE EQUIP_GRADE_ID = P_EQUIP_GRADE_ID;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE V_INVALID_EQUIP_GRADE;
    END;

    -- 관련 카테고리 검수 항목 ID 가져오기
    BEGIN
        SELECT MIN(CATE_INSPEC_ID) INTO V_CATE_INSPEC_ID FROM CATE_INSPEC;
        IF V_CATE_INSPEC_ID IS NULL THEN
            V_CATE_INSPEC_ID := 1; -- 기본값 설정
        END IF;
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            V_CATE_INSPEC_ID := 1; -- 기본값 설정
    END;

    -- 1. 검수 목록 테이블에 데이터 저장 (검수 시작)
    SELECT NVL(MAX(INSPEC_LIST_ID), 0) + 1 INTO V_INSPEC_LIST_ID FROM INSPEC_LIST;

    INSERT INTO INSPEC_LIST
    (INSPEC_LIST_ID, INSPEC_COMMENT, CATE_INSPEC_ID, PLATFORM_DELIVERY_ID,
     PLATFORM_DELIVERY_RETURN_ID, ADMIN_ID, INSPEC_GRADE_ID, INSPECTION_DATE)
    VALUES
        (V_INSPEC_LIST_ID, P_INSPEC_COMMENT, V_CATE_INSPEC_ID,
         P_PLATFORM_DELIVERY_ID, P_PLATFORM_DELIVERY_RETURN_ID,
         P_ADMIN_ID, P_INSPEC_GRADE_ID, SYSDATE);

    -- 2. 검수 결과 테이블에 데이터 저장 (검수 완료)
    SELECT NVL(MAX(INSPEC_RESULT_ID), 0) + 1 INTO V_INSPEC_RESULT_ID FROM INSPEC_RESULT;

    IF P_PLATFORM_DELIVERY_ID IS NOT NULL THEN
        INSERT INTO INSPEC_RESULT
        (INSPEC_RESULT_ID, PLATFORM_DELIVERY_ID, PLATFORM_DELIVERY_RETURN_ID, EQUIP_GRADE_ID)
        VALUES
            (V_INSPEC_RESULT_ID, P_PLATFORM_DELIVERY_ID, NULL, P_EQUIP_GRADE_ID);
    ELSE
        INSERT INTO INSPEC_RESULT
        (INSPEC_RESULT_ID, PLATFORM_DELIVERY_ID, PLATFORM_DELIVERY_RETURN_ID, EQUIP_GRADE_ID)
        VALUES
            (V_INSPEC_RESULT_ID, NULL, P_PLATFORM_DELIVERY_RETURN_ID, P_EQUIP_GRADE_ID);
    END IF;

    -- 3. 등급에 따른 처리 유형 결정 (EQUIP_GRADE 정보 기반)
    CASE
        WHEN V_EQUIP_GRADE_NAME IN ('A', 'B') THEN
            V_RESULT_ACTION_TYPE_ID := 1; -- 정상 처리
        WHEN V_EQUIP_GRADE_NAME IN ('C', 'D') THEN
            V_RESULT_ACTION_TYPE_ID := 2; -- 부분 수리
        ELSE
            V_RESULT_ACTION_TYPE_ID := 3; -- 전체 수리
        END CASE;

    -- 4. 검수 결과 처리 테이블에 데이터 저장
    SELECT NVL(MAX(INSPEC_RESULT_ACTION_ID), 0) + 1 INTO V_INSPEC_RESULT_ACTION_ID FROM INSPEC_RESULT_ACTION;

    INSERT INTO INSPEC_RESULT_ACTION
    (INSPEC_RESULT_ACTION_ID, INSPEC_RESULT_ID, INSPEC_RESULT_ACTION_TYPE_ID, COMPLETED_DATE)
    VALUES
        (V_INSPEC_RESULT_ACTION_ID, V_INSPEC_RESULT_ID, V_RESULT_ACTION_TYPE_ID, SYSDATE);

    -- 5. 로그 메시지 출력
    DBMS_OUTPUT.PUT_LINE('검수 처리 완료. 장비 등급: ' || V_EQUIP_GRADE_NAME ||
                         ', 검수 결과 ID: ' || V_INSPEC_RESULT_ID ||
                         ', 처리 유형: ' || V_RESULT_ACTION_TYPE_ID);

    -- 트랜잭션 커밋
    COMMIT;

EXCEPTION
    WHEN V_ALREADY_PROCESSED THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('이미 검수 처리가 완료된 항목입니다.');

    WHEN V_INVALID_EQUIP_GRADE THEN
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('유효하지 않은 장비 등급 ID: ' || P_EQUIP_GRADE_ID);

    WHEN OTHERS THEN
        -- 오류 발생 시 롤백
        ROLLBACK;
        -- 오류 정보 출력
        DBMS_OUTPUT.PUT_LINE('오류 발생: ' || SQLERRM || ', 오류 코드: ' || SQLCODE);
        -- 오류 다시 발생시키기
        RAISE;
END INSPECT_RESULT;
/

