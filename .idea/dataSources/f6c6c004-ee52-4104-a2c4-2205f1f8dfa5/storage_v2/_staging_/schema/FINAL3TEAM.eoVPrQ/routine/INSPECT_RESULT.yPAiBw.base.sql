create PROCEDURE INSPECT_RESULT
(
    P_PLATFORM_DELIVERY_ID IN NUMBER,
    P_PLATFORM_DELIVERY_RETURN_ID IN NUMBER,
    P_INSPEC_GRADE_ID IN NUMBER,
    P_EQUIP_GRADE_ID IN NUMBER,
    P_ADMIN_ID IN VARCHAR2 DEFAULT 'ADMIN1',
    P_INSPEC_COMMENT IN VARCHAR2 DEFAULT '자동 검수 처리'
)
AS
    V_INSPEC_RESULT_ID NUMBER;
    V_INSPEC_RESULT_ACTION_ID NUMBER;
    V_RESULT_ACTION_TYPE_ID NUMBER;
    V_ADMIN_ID VARCHAR2(20); -- 기본값 설정
    V_INSPEC_LIST_ID NUMBER;
    V_CATE_INSPEC_ID NUMBER;
BEGIN
    -- 관련 카테고리 검수 항목 ID 가져오기 (예제임, 실제 구현에 맞게 수정 필요)
    SELECT MIN(CATE_INSPEC_ID) INTO V_CATE_INSPEC_ID FROM CATE_INSPEC;

    -- 1. 검수 목록 테이블에 데이터 저장
    SELECT NVL(MAX(INSPEC_LIST_ID), 0) + 1 INTO V_INSPEC_LIST_ID FROM INSPEC_LIST;

    INSERT INTO INSPEC_LIST
    (INSPEC_LIST_ID, INSPEC_COMMENT, CATE_INSPEC_ID, PLATFORM_DELIVERY_ID,
     PLATFORM_DELIVERY_RETURN_ID, ADMIN_ID, INSPEC_GRADE_ID, INSPECTION_DATE)
    VALUES
        (V_INSPEC_LIST_ID, P_INSPEC_COMMENT, V_CATE_INSPEC_ID,
         P_PLATFORM_DELIVERY_ID, P_PLATFORM_DELIVERY_RETURN_ID,
         P_ADMIN_ID, P_INSPEC_GRADE_ID, SYSDATE);

    -- 2. 검수 결과 테이블에 데이터 저장
    SELECT NVL(MAX(INSPEC_RESULT_ID), 0) + 1 INTO V_INSPEC_RESULT_ID FROM INSPEC_RESULT;

    IF P_PLATFORM_DELIVERY_ID IS NOT NULL THEN
        INSERT INTO INSPEC_RESULT
        (INSPEC_RESULT_ID, PLATFORM_DELIVERY_ID, PLATFORM_DELIVERY_RETURN_ID, EQUIP_GRADE_ID)
        VALUES
            (V_INSPEC_RESULT_ID, P_PLATFORM_DELIVERY_ID, NULL, P_EQUIP_GRADE_ID);
    ELSE
        INSERT INTO INSPEC_RESULT
        (INSPEC_RESULT_ID, PLATFORM_DELIVERY_ID, PLATFORM_DELIVERY_RETURN_ID, EQUIP_GRADE_ID)
        VALUES
            (V_INSPEC_RESULT_ID, NULL, P_PLATFORM_DELIVERY_RETURN_ID, P_EQUIP_GRADE_ID);
    END IF;

    -- 3. 등급에 따른 처리 유형 결정
    CASE
        WHEN P_EQUIP_GRADE_ID IN (1, 2) THEN -- A, B 등급
        V_RESULT_ACTION_TYPE_ID := 1; -- 정상 처리
        WHEN P_EQUIP_GRADE_ID IN (3, 4) THEN -- C, D 등급
        V_RESULT_ACTION_TYPE_ID := 2; -- 부분 수리
        ELSE -- E, F 등급
        V_RESULT_ACTION_TYPE_ID := 3; -- 전체 수리
        END CASE;

    -- 4. 검수 결과 처리 테이블에 데이터 저장
    SELECT NVL(MAX(INSPEC_RESULT_ACTION_ID), 0) + 1 INTO V_INSPEC_RESULT_ACTION_ID FROM INSPEC_RESULT_ACTION;

    INSERT INTO INSPEC_RESULT_ACTION
    (INSPEC_RESULT_ACTION_ID, INSPEC_RESULT_ID, INSPEC_RESULT_ACTION_TYPE_ID, COMPLETED_DATE)
    VALUES
        (V_INSPEC_RESULT_ACTION_ID, V_INSPEC_RESULT_ID, V_RESULT_ACTION_TYPE_ID, SYSDATE);

    -- 트랜잭션 커밋
    COMMIT;

EXCEPTION
    WHEN OTHERS THEN
        -- 오류 발생 시 롤백
        ROLLBACK;
        -- 오류 정보 출력
        DBMS_OUTPUT.PUT_LINE('오류 발생: ' || SQLERRM);
        -- 오류 다시 발생시키기
        RAISE;
END INSPECT_RESULT;
/

