<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.mvc.Interface.IMatchingRequestDAO">

    <!-- 거래 id와 거래유형으로 해당 거래 id에 매칭신청한 사용자 목록을 불러오는 메소드-->
    <select id="listRequestByTransactionIdType" resultType="com.team.mvc.DTO.MatchingRequestDTO">
        SELECT TRANSACTION_ID, TRANSACTION_TYPE, USER_CODE, USER_NICKNAME
             , TO_CHAR(RENTAL_START_DATE, 'YYYY-MM-DD') AS RENTAL_START_DATE
             , TO_CHAR(RENTAL_END_DATE, 'YYYY-MM-DD') AS RENTAL_END_DATE, RENTAL_DURATION
             , RENTAL_PAY, TRUST, RENTAL_HISTORY, REQUESTED_DATE, NVL(PAYMENT_DATE, '') AS PAYMENT_DATE
             , MATCHING_REQ_ID, PAYMENT_STATUS
        FROM VW_RENTAL_APPLICANT
        WHERE TRANSACTION_ID = #{transaction_id} AND TRANSACTION_TYPE LIKE #{transaction_type} || '%'
    </select>

    <!-- 스토렌 매칭 신청(insert) -->
    <insert id="insertStorenMatchingRequest" parameterType="com.team.mvc.DTO.MatchingRequestDTO">
        INSERT INTO STOREN_MATCHING_REQ (
            STOREN_MATCHING_REQ_ID
            , STOREN_MATCHING_REQ_USER_ID
            , STOREN_IRA_ID
            , RENTAL_START_DATE
            , RENTAL_END_DATE
            , REQUESTED_DATE
        )
        VALUES (
                   STOREN_MATCHING_REQ_SEQ.NEXTVAL
                   , #{user_code}
                   , (SELECT STOREN_IRA_ID FROM STOREN_IRA WHERE STOREN_ID = #{transaction_id})
                   , TO_DATE(#{rental_start_date}, 'YYYY-MM-DD')
                   , TO_DATE(#{rental_end_date}, 'YYYY-MM-DD')
                   , SYSDATE
               )
    </insert>

    <!-- 해당 스토렌id에 해당 유저가 매칭신청을 했다면 매칭 정보 반환 -->
    <select id="getMatchingByStorenAndUser" resultType="com.team.mvc.DTO.MatchingRequestDTO">
        SELECT TRANSACTION_ID, TRANSACTION_TYPE, USER_CODE, USER_NICKNAME
             , TO_CHAR(RENTAL_START_DATE, 'YYYY-MM-DD') AS RENTAL_START_DATE
             , TO_CHAR(RENTAL_END_DATE, 'YYYY-MM-DD') AS RENTAL_END_DATE, RENTAL_DURATION
             , RENTAL_PAY, TRUST, RENTAL_HISTORY, REQUESTED_DATE, PAYMENT_DATE AS PAYMENT_DATE
             , MATCHING_REQ_ID, PAYMENT_STATUS, MATCHING_DONE_ID
        FROM VW_RENTAL_APPLICANT
        WHERE TRANSACTION_ID = #{storenId} AND USER_CODE = #{user_code} AND TRANSACTION_TYPE LIKE '스토렌%'
    </select>

    <!-- 스토렌 매칭 승인(1. 매칭 완료 테이블에 insert) -->
    <insert id="insertStorenMatchingDone">
        INSERT INTO STOREN_MATCHING_DONE(STOREN_MATCHING_DONE_ID, STOREN_MATCHING_REQ_ID, APPROVED_DATE)
        VALUES(STOREN_MATCHING_DONE_SEQ.NEXTVAL, #{requestId}, SYSDATE)
    </insert>

    <!-- 해당 스토렌ID의 다른 매칭 요청 삭제(2. 매칭 신청 테이블에서 delete) -->
    <delete id="deleteOtherStorenRequests">
        DELETE
        FROM STOREN_MATCHING_REQ
        WHERE storen_ira_id = (select storen_ira_id
                               from storen_ira
                               where storen_id = #{storenId})
          AND STOREN_MATCHING_REQ_ID != #{requestId}
    </delete>

    <!-- 매칭신청자가 매칭신청 삭제(매칭 승인 전에만 가능) -->
    <delete id="deleteStorenMatchingRequest">
        DELETE
        FROM STOREN_MATCHING_REQ SMR
        WHERE STOREN_IRA_ID = (SELECT STOREN_IRA_ID
                               FROM STOREN_IRA
                               WHERE STOREN_ID = #{storenId})
          AND STOREN_MATCHING_REQ_ID = #{requestId}
          AND NOT EXISTS (
                            SELECT 1
                            FROM STOREN_MATCHING_DONE SMD
                            WHERE SMD.STOREN_MATCHING_REQ_ID = SMR.STOREN_MATCHING_REQ_ID
                         )
    </delete>

    <!-- 결제완료한 경우에만!! 매칭신청id로 매칭신청 정보 조회하는 메소드 -->
    <select id="getMatchingRequestById" resultType="com.team.mvc.DTO.MatchingRequestDTO">
        SELECT TRANSACTION_ID, TRANSACTION_TYPE, USER_CODE, USER_NICKNAME
             , TO_CHAR(RENTAL_START_DATE, 'YYYY-MM-DD') AS RENTAL_START_DATE
             , TO_CHAR(RENTAL_END_DATE, 'YYYY-MM-DD') AS RENTAL_END_DATE, RENTAL_DURATION
             , RENTAL_PAY, TRUST, RENTAL_HISTORY, REQUESTED_DATE, TO_CHAR(PAYMENT_DATE, 'YYYY-MM-DD HH24:MI:SS') AS PAYMENT_DATE
             , MATCHING_REQ_ID, PAYMENT_STATUS, MATCHING_DONE_ID
        FROM VW_RENTAL_APPLICANT
        WHERE MATCHING_REQ_ID = #{requestId} AND PAYMENT_STATUS = '결제완료'
    </select>

    <!-- 결제완료한 경우에만!! 유저코드로 "스토렌" 매칭신청 정보 조회하는 메소드 -->
    <select id="listStorenMatchingByUserCode" resultType="com.team.mvc.DTO.MatchingRequestDTO">
        SELECT TRANSACTION_ID, TRANSACTION_TYPE, USER_CODE, USER_NICKNAME
             , TO_CHAR(RENTAL_START_DATE, 'YYYY-MM-DD') AS RENTAL_START_DATE
             , TO_CHAR(RENTAL_END_DATE, 'YYYY-MM-DD') AS RENTAL_END_DATE, RENTAL_DURATION
             , RENTAL_PAY, TRUST, RENTAL_HISTORY, REQUESTED_DATE, TO_CHAR(PAYMENT_DATE, 'YYYY-MM-DD HH24:MI:SS') AS PAYMENT_DATE
             , MATCHING_REQ_ID, PAYMENT_STATUS, MATCHING_DONE_ID
        FROM VW_RENTAL_APPLICANT
        WHERE USER_CODE=#{userCode} AND PAYMENT_STATUS = '결제완료' AND TRANSACTION_TYPE LIKE '스토렌%'
    </select>

</mapper>