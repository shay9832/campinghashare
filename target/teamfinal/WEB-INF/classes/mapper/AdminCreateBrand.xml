<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team.mvc.Interface.IAdminCreateBrandDAO">
    <!-- 브랜드 목록 조회 -->
    <select id="getBrandList" resultType="com.team.mvc.DTO.BrandDTO">
        SELECT
            brand_id as brand_Id,
            brand_name as brandName
        FROM
            brand
        ORDER BY
            brand_id
    </select>

    <!-- 브랜드 상세 조회 -->
    <select id="getBrandById" parameterType="int" resultType="com.team.mvc.DTO.BrandDTO">
        SELECT
            brand_id as brand_Id,
            brand_name as brandName
        FROM
            brand
        WHERE
            brand_id = #{brandId}
    </select>

    <!-- 브랜드 추가 -->
    <insert id="insertBrand" parameterType="com.team.mvc.DTO.BrandDTO">
        INSERT INTO brand (
            brand_id,
            brand_name
        ) VALUES (
                         (SELECT NVL(MAX(brand_id), 0) + 1 FROM brand),
                         #{brandName}
                 )
    </insert>

    <!-- 브랜드 수정 -->
    <update id="updateBrand" parameterType="com.team.mvc.DTO.BrandDTO">
        UPDATE brand
        SET
            brand_name = #{brandName}
        WHERE
            brand_id = #{brandId}
    </update>

    <!-- 브랜드 삭제 -->
    <delete id="deleteBrand" parameterType="int">
        DELETE FROM brand
        WHERE brand_id = #{brandId}
    </delete>

    <!-- 특정 브랜드의 장비명 목록 조회 -->
    <select id="getEquipmentListByBrandId" parameterType="int" resultType="com.team.mvc.DTO.EquipmentDTO">
        SELECT
            en.equip_name_id,
            en.brand_id,
            en.equip_name,
            b.brand_name as brand
        FROM
            equip_name en
                JOIN
            brand b ON en.brand_id = b.brand_id
        WHERE
            en.brand_id = #{brandId}
        ORDER BY
            en.equip_name_id
    </select>

    <!-- 장비명 상세 조회 -->
    <select id="getEquipmentById" parameterType="int" resultType="com.team.mvc.DTO.EquipmentDTO">
        SELECT
            en.equip_name_id,
            en.brand_id,
            en.equip_name,
            b.brand_name as brand
        FROM
            equip_name en
                JOIN
            brand b ON en.brand_id = b.brand_id
        WHERE
            en.equip_name_id = #{equip_name_id}
    </select>

    <!-- 장비명 추가 -->
    <insert id="insertEquipment" parameterType="com.team.mvc.DTO.EquipmentDTO">
        INSERT INTO equip_name (
            equip_name_id,
            brand_id,
            equip_name
        ) VALUES (
                         (SELECT NVL(MAX(equip_name_id), 0) + 1 FROM equip_name),
                         #{brandId},
                         #{equip_name}
                 )
    </insert>

    <!-- 장비명 수정 -->
    <update id="updateEquipment" parameterType="com.team.mvc.DTO.EquipmentDTO">
        UPDATE equip_name
        SET
            equip_name = #{equip_name}
        WHERE
            equip_name_id = #{equip_name_id}
    </update>

    <!-- 장비명 삭제 -->
    <delete id="deleteEquipment" parameterType="int">
        DELETE FROM equip_name
        WHERE equip_name_id = #{equip_name_id}
    </delete>

    <!-- 카테고리 목록 조회 -->
    <select id="getCategoryList" resultType="com.team.mvc.DTO.CategoryDTO">
        SELECT
            category_id,
            parent_category_id,
            category_name
        FROM
            category
        ORDER BY
            category_id
    </select>

    <!-- 부모 카테고리별 하위 카테고리 조회 -->
    <select id="getSubCategoriesByParentId" parameterType="int" resultType="com.team.mvc.DTO.CategoryDTO">
        SELECT
            category_id,
            parent_category_id,
            category_name
        FROM
            category
        WHERE
            parent_category_id = #{parent_category_id}
        ORDER BY
            category_id
    </select>
</mapper>