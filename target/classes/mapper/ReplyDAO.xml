<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.mvc.Interface.IReplyDAO">
    <!-- 댓글 추가 -->
    <insert id="insertReply" parameterType="com.team.mvc.DTO.ReplyDTO">
        INSERT INTO REPLY (
            REPLY_ID,
            ROOT_REPLY_ID,
            USER_CODE,
            POST_ID,
            REPLY_CONTENT,
            CREATED_DATE
        ) VALUES (
                     REPLY_SEQ.NEXTVAL,
                     #{rootReplyId, jdbcType=INTEGER},
                     #{userCode, jdbcType=INTEGER},
                     #{postId, jdbcType=INTEGER},
                     #{replyContent, jdbcType=VARCHAR},
                     SYSDATE
                 )
    </insert>

    <!-- 댓글 삭제 -->
    <delete id="deleteReply" parameterType="int">
        DELETE FROM REPLY
        WHERE REPLY_ID = #{replyId}
    </delete>

    <!-- 댓글 조회 -->
    <select id="getReplyById" parameterType="int" resultType="com.team.mvc.DTO.ReplyDTO">
        SELECT
            REPLY_ID as replyId,
            ROOT_REPLY_ID as rootReplyId,
            USER_CODE as userCode,
            POST_ID as postId,
            REPLY_CONTENT as replyContent,
            CREATED_DATE as createdDate
        FROM REPLY
        WHERE REPLY_ID = #{replyId}
    </select>

    <!-- 첨부파일 추가 -->
    <insert id="insertReplyAttachment" parameterType="com.team.mvc.DTO.AttachmentDTO">
        INSERT INTO ATTACHMENT_REPLY (ATTACHMENT_REPLY_ID, REPLY_ID, ATTACHMENT_NAME, ATTACHMENT_PATH, ATTACHMENT_SIZE, ATTACHMENT_ORDER, CREATED_DATE)
        VALUES (ATTACHMENT_REPLY_SEQ.NEXTVAL, #{replyId}, #{attachmentName}, #{attachmentPath}, #{attachmentSize}, #{attachmentOrder}, SYSDATE)
    </insert>

    <!-- 댓글별 첨부파일 조회 -->
    <select id="getAttachmentsByReplyId" parameterType="int" resultType="com.team.mvc.DTO.AttachmentDTO">
        SELECT
            ATTACHMENT_REPLY_ID as attachmentReplyId,
            REPLY_ID as replyId,
            ATTACHMENT_NAME as attachmentName,
            ATTACHMENT_PATH as attachmentPath,
            ATTACHMENT_SIZE as attachmentSize,
            ATTACHMENT_ORDER as attachmentOrder
        FROM ATTACHMENT_REPLY
        WHERE REPLY_ID = #{replyId}
        ORDER BY ATTACHMENT_REPLY_ID ASC
    </select>

    <!-- 첨부파일 삭제 -->
    <delete id="deleteReplyAttachment" parameterType="int">
        DELETE FROM ATTACHMENT_REPLY
        WHERE ATTACHMENT_REPLY_ID = #{attachmentReplyId}
    </delete>

    <!-- 댓글 ID로 모든 첨부파일 삭제 -->
    <delete id="deleteAttachmentsByReplyId" parameterType="int">
        DELETE FROM ATTACHMENT_REPLY
        WHERE REPLY_ID = #{replyId}
    </delete>




    <!-- 회원코드로 해당 유저가 남긴 댓글 리스트(최근 등록일순으로 count건 수 조회) -->
    <select id="listRecentReplyByUserCode" resultType="com.team.mvc.DTO.ReplyDTO">
        SELECT *
        FROM (SELECT REPLY_ID      as replyId,
                     ROOT_REPLY_ID as rootReplyId,
                     USER_CODE     as userCode,
                     POST_ID       as postId,
                     REPLY_CONTENT as replyContent,
                     CREATED_DATE  as createdDate
              FROM REPLY
              WHERE USER_CODE = #{userCode}
              ORDER BY CREATED_DATE DESC
              )
        <![CDATA[WHERE ROWNUM <= #{count}]]>
    </select>

    <!-- 사용자가 작성한 댓글 전체 수 조회 -->
    <select id="getUserReplyCount" parameterType="com.team.mvc.DTO.BoardPostDTO" resultType="int">
        SELECT COUNT(*)
        FROM REPLY R
        WHERE R.USER_CODE = #{userCode}
        <if test="searchKeyword != null and searchKeyword != ''">
            AND R.REPLY_CONTENT LIKE '%' || #{searchKeyword} || '%'
        </if>
    </select>

    <!-- 댓글과 게시글 정보를 함께 조회하기 위한 resultMap -->
    <resultMap id="replyWithPostResultMap" type="com.team.mvc.DTO.ReplyDTO">
        <id property="replyId" column="replyId"/>
        <result property="rootReplyId" column="rootReplyId"/>
        <result property="userCode" column="userCode"/>
        <result property="postId" column="postId"/>
        <result property="replyContent" column="replyContent"/>
        <result property="createdDate" column="createdDate"/>
        <result property="nickname" column="nickname"/>

        <association property="replyPostDTO" javaType="com.team.mvc.DTO.BoardPostDTO">
            <id property="postId" column="replyPostDTO.postId"/>
            <result property="postTitle" column="replyPostDTO.postTitle"/>
            <result property="boardName" column="replyPostDTO.boardName"/>
            <result property="createdDate" column="replyPostDTO.createdDate"/>
            <result property="viewCount" column="replyPostDTO.viewCount"/>
            <result property="recommendCount" column="replyPostDTO.recommendCount"/>
        </association>
    </resultMap>

    <!-- 사용자가 작성한 댓글 목록 조회 (페이징 처리 및 게시글 정보 포함) -->
    <select id="listUserReplyByDTO" parameterType="com.team.mvc.DTO.BoardPostDTO" resultMap="replyWithPostResultMap">
        SELECT *
        FROM (
        SELECT ROWNUM AS RNUM, A.*
        FROM (
        SELECT
        R.REPLY_ID as replyId,
        R.ROOT_REPLY_ID as rootReplyId,
        R.USER_CODE as userCode,
        R.POST_ID as postId,
        R.REPLY_CONTENT as replyContent,
        R.CREATED_DATE as createdDate,
        (SELECT NICKNAME FROM NICKNAME_LOG
        WHERE USER_CODE = R.USER_CODE
        AND LAST_UPDATED_DATE = (SELECT MAX(LAST_UPDATED_DATE) FROM NICKNAME_LOG WHERE USER_CODE = R.USER_CODE)) as nickname,
        P.POST_ID as "replyPostDTO.postId",
        P.POST_TITLE as "replyPostDTO.postTitle",
        P.CREATED_DATE as "replyPostDTO.createdDate",
        (SELECT COUNT(*) FROM POST_VIEW_LOG WHERE POST_ID = P.POST_ID) as "replyPostDTO.viewCount",
        B.BOARD_NAME as "replyPostDTO.boardName",
        (SELECT COUNT(*) FROM RECOMMEND WHERE POST_ID = P.POST_ID) as "replyPostDTO.recommendCount"
        FROM REPLY R
        JOIN POST P ON R.POST_ID = P.POST_ID
        JOIN BOARD B ON P.BOARD_ID = B.BOARD_ID
        WHERE R.USER_CODE = #{userCode}
        <if test="searchKeyword != null and searchKeyword != ''">
            AND R.REPLY_CONTENT LIKE '%' || #{searchKeyword} || '%'
        </if>
        ORDER BY
        <choose>
            <when test="sortType == 'oldest'">R.CREATED_DATE ASC</when>
            <otherwise>R.CREATED_DATE DESC</otherwise>
        </choose>
        ) A
        WHERE ROWNUM &lt;= #{pagenation.endRow}
        )
        WHERE RNUM >= #{pagenation.startRow}
    </select>
</mapper>